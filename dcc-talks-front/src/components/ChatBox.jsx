import React, { Component } from "react";

import { makeStyles } from "@material-ui/core/styles";
import AppBar from "@material-ui/core/AppBar";
import CssBaseline from "@material-ui/core/CssBaseline";
import Toolbar from "@material-ui/core/Toolbar";
import Typography from "@material-ui/core/Typography";
import Paper from "@material-ui/core/Paper";
import List from "@material-ui/core/List";
import ListItem from "@material-ui/core/ListItem";
import ListItemText from "@material-ui/core/ListItemText";
import SendRoundedIcon from "@material-ui/icons/SendRounded";
import IconButton from "@material-ui/core/IconButton";
import Box from '@material-ui/core/Box';

import Input from "@material-ui/core/Input";

const useStyles = makeStyles(theme => ({
  text: {
    padding: theme.spacing(2, 2, 0)
  },
  paper: {
    paddingBottom: 50
  },
  list: {
    marginBottom: theme.spacing(2)
  },
  subheader: {
    backgroundColor: theme.palette.background.paper
  },
  appBar: {
    bottom: "auto",
    bottom: 0
  },
  grow: {
    flexGrow: 1
  },
  fabButton: {
    position: "absolute",
    zIndex: 1,
    top: -30,
    left: 0,
    right: 0,
    margin: "0 auto"
  }
}));

export default class ChatBox extends React.Component {
    constructor(props){
        super(props);
        this.state = {
            messages: [
                {
                  id: 1,
                  primary: "Brunch this week?",
                  secondary:
                    "I'll be in the neighbourhood this week. Let's grab a bite to eat",
                  person: "/static/images/avatar/5.jpg"
                },
                {
                  id: 2,
                  primary: "Birthday Gift",
                  secondary: `Do you have a suggestion for a good present for John on his work
                          anniversary. I am really confused & would love your thoughts on it.`,
                  person: "/static/images/avatar/1.jpg"
                },
                {
                  id: 3,
                  primary: "Recipe to try",
                  secondary:
                    "I am try out this new BBQ recipe, I think this might be amazing",
                  person: "/static/images/avatar/2.jpg"
                },
                {
                  id: 4,
                  primary: "Yes!",
                  secondary: "I have the tickets to the ReactConf for this year.",
                  person: "/static/images/avatar/3.jpg"
                },
                {
                  id: 5,
                  primary: "Doctor's Appointment",
                  secondary:
                    "My appointment for the doctor was rescheduled for next Saturday.",
                  person: "/static/images/avatar/4.jpg"
                },
                {
                  id: 6,
                  primary: "Discussion",
                  secondary: `Menus that are generated by the bottom app bar (such as a bottom
                          navigation drawer or overflow menu) open as bottom sheets at a higher elevation
                          than the bar.`,
                  person: "/static/images/avatar/5.jpg"
                },
                {
                  id: 7,
                  primary: "Summer BBQ",
                  secondary: `Who wants to have a cookout this weekend? I just got some furniture
                          for my backyard and would love to fire up the grill.`,
                  person: "/static/images/avatar/1.jpg"
                }
              ],
            text_message: ""
        };

        this.props.receiveMessage(function(msg){
            this.setState({
                messages: [
                  ...this.state.messages,
                  {
                      id: 8,
                      primary: msg,
                      secondary: msg
                  }
                ]
              })
        }.bind(this));
    }
    
    render() {
        const classes = useStyles;
        const handleChange = name => event => {
            this.setState({ ...this.state, [name]: event.target.value });
          };
          const handleSubmit = () => {
            this.props.sendMessage(this.state.text_message, (callback) => {console.log(callback)})
          }
          return (
            <React.Fragment>
              <CssBaseline />
                <Typography className={classes.text} variant="h5" gutterBottom>
                  ChatBox
                </Typography>
                <List className={classes.list}>
                  {this.state.messages.map(({ id, primary, secondary}) => (
                    <React.Fragment key={id}>
                      <ListItem>
                        <ListItemText primary={primary} secondary={secondary} />
                      </ListItem>
                    </React.Fragment>
                  ))}
                </List>
              <Box bgcolor="primary.main" color="primary.contrastText" p={1} m={1}>
              <Input
                className={classes.input}
                placeholder="Digite uma mensagem."
                value={this.state.text_message}
                onChange={handleChange('text_message')}
              />
              <IconButton className={classes.iconButton} align="right" onClick={handleSubmit}>
                <SendRoundedIcon />
              </IconButton>
              </Box>
            </React.Fragment>
          );
    }
}
